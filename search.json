[
  {
    "objectID": "metadata.html",
    "href": "metadata.html",
    "title": "Metadata",
    "section": "",
    "text": "The metadata for the Rotorua project is within the rotorua_data_qc.zip folder. This folder contains the metadata for the project, including the device position, device variable, quality control filters, sensor calibrations, sensor reference, sensor scaling, site devices, site events, sites and variables.\nIn this document, we will describe the contents of each file in the rotorua_data_qc.zip folder. The files are in CSV format."
  },
  {
    "objectID": "metadata.html#load-libraries",
    "href": "metadata.html#load-libraries",
    "title": "Metadata",
    "section": "Load libraries",
    "text": "Load libraries\n\nlibrary(dplyr)\nlibrary(readr)\nlibrary(DT)\n\n# Set timezone to NZST\nwithr::local_locale(c(\"LC_TIME\" = \"C\"))\nwithr::local_timezone(\"Etc/GMT-12\")"
  },
  {
    "objectID": "metadata.html#device-position",
    "href": "metadata.html#device-position",
    "title": "Metadata",
    "section": "2.1 Device position",
    "text": "2.1 Device position\nThe device position is stored in a CSV file. The file contains the following columns:\n\ndevice_id: The unique identifier for the device.\nreference: The location of the device. This can be depth (“d”), height (“h”) or elevation (“e”).\nz_relative: The relative position of the device in meters. This is the distance from the reference point to the device.\n\n\ndevice_position &lt;- read_csv(\"rotorua_data_qc/device_position.csv\", col_types = cols())\ndevice_position\n\n\n\n\n\nTable 1: Device position and relative distance."
  },
  {
    "objectID": "metadata.html#device-variable",
    "href": "metadata.html#device-variable",
    "title": "Metadata",
    "section": "2.2 Device variable",
    "text": "2.2 Device variable\nThe device variable is stored in a CSV file. The file contains the following columns:\n\ndevice_id: The unique identifier for the device.\nvar_abbr: The variable abbreviation. This is the short name for the variable.\n\n\ndevice_variable &lt;- read_csv(\"rotorua_data_qc/device_variable.csv\", col_types = cols())\ndevice_variable\n\n\n\n\n\nTable 2: Device variable mapping."
  },
  {
    "objectID": "metadata.html#quality-control-filters",
    "href": "metadata.html#quality-control-filters",
    "title": "Metadata",
    "section": "2.3 Quality control filters",
    "text": "2.3 Quality control filters\nThe quality control filters are stored in a CSV file. The file contains the following columns:\n\nvar_abbr: The variable abbreviation. This is the short name for the variable.\nlow: The lower limit for the variable. This is the minimum value for the variable.\nhigh: The upper limit for the variable. This is the maximum value for the variable.\nroc: The rate of change for the variable. This is the maximum rate of change for the variable.\nconsec: The consecutive number of points for the variable. This is the minimum number of consecutive points for the variable.\ninterp: The interpolation for the variable. This is the maximum number of points for the variable.\n\n\nqc_filters &lt;- read_csv(\"rotorua_data_qc/qc_filters.csv\", col_types = cols())\n\nqc_filters \n\n\n\n\n\nTable 3: Quality control filters."
  },
  {
    "objectID": "metadata.html#quality-controlled-data",
    "href": "metadata.html#quality-controlled-data",
    "title": "Metadata",
    "section": "2.4 Quality controlled data",
    "text": "2.4 Quality controlled data\nThis is the finished quality controlled data. There is a summary of this data on the Quality control page."
  },
  {
    "objectID": "metadata.html#sensor-calibrations",
    "href": "metadata.html#sensor-calibrations",
    "title": "Metadata",
    "section": "2.5 Sensor calibrations",
    "text": "2.5 Sensor calibrations\nThe sensor calibrations are stored in a CSV file. The file contains the following columns: - device_id: The unique identifier for the device. - date: The date of the calibration. - site: The site of the calibration. - variable: The variable of the calibration. - temperature: The temperature of the calibration. - type: The type of calibration. - comment: The comment for the calibration.\n\nsensor_calibrations &lt;- read_csv(\"rotorua_data_qc/sensor_calibrations.csv\", col_types = cols())\n\nsensor_calibrations\n\n\n\n\n\nTable 4: Sensor calibrations."
  },
  {
    "objectID": "metadata.html#sensor-reference",
    "href": "metadata.html#sensor-reference",
    "title": "Metadata",
    "section": "2.6 Sensor reference",
    "text": "2.6 Sensor reference\nThe sensor reference is stored in a CSV file. The file contains the following columns:\n\ndevice_id: The unique identifier for the device.\ndate: The date of the reference measurement.\nreference_type: The type of reference measurement.\nvalue_actual: The actual value of the reference measurement.\nunits_value: The units of the actual value.\nvalue_measured: The measured value of the reference measurement.\nunits_sensor: The units of the measured value.\ntemperature: The temperature of the reference measurement.\ncomment: The comment for the reference measurement.\n\n\nsensor_reference &lt;- read_csv(\"rotorua_data_qc/sensor_reference.csv\", col_types = cols())\n\nsensor_reference\n\n\n\n\n\nTable 5: Sensor reference measurements."
  },
  {
    "objectID": "metadata.html#sensor-scaling",
    "href": "metadata.html#sensor-scaling",
    "title": "Metadata",
    "section": "2.7 Sensor scaling",
    "text": "2.7 Sensor scaling\nThe sensor scaling is stored in a CSV file. The file contains the following columns:\n\ndevice_id: The unique identifier for the device.\ndate: The date of the scaling.\noffset: The offset for the scaling.\nmultiplier: The multiplier for the scaling.\nrange: The range for the scaling.\nlog_multiplier: The logger multiplier for the scaling.\nsource: The source of the scaling factors.\ncomment: The comment for the scaling.\n\n\nsensor_scaling &lt;- read_csv(\"rotorua_data_qc/sensor_scaling.csv\", col_types = cols())\n\nsensor_scaling\n\n\n\n\n\nTable 6: Sensor scaling relationships."
  },
  {
    "objectID": "metadata.html#site-devices",
    "href": "metadata.html#site-devices",
    "title": "Metadata",
    "section": "2.8 Site devices",
    "text": "2.8 Site devices\nThe site devices are stored in a CSV file. The file contains the following columns:\n\nsite: The site of the device.\ndevice_id: The unique identifier for the device.\ndate_from: The date the device was installed.\ndate_to: The date the device was removed.\nnotes_device: The notes for the device.\nnotes: The notes for the site.\n\n\nsite_devices &lt;- read_csv(\"rotorua_data_qc/site_devices.csv\", col_types = cols())\n\nsite_devices\n\n\n\n\n\nTable 7: Site devices."
  },
  {
    "objectID": "metadata.html#site-events",
    "href": "metadata.html#site-events",
    "title": "Metadata",
    "section": "2.9 Site events",
    "text": "2.9 Site events\nThe site events are stored in a CSV file. The file contains the following columns:\n\nsite: The site of the event.\ndate: The date of the event.\nsite_visit: Was the site visited?\nvariables: The variables of the event.\naction: The action of the event. Can be “deployed”, “removed”, “cleaned”, “rebooted” or “other”.\ncomment: The comment for the event.\n\n\nsite_events &lt;- read_csv(\"rotorua_data_qc/site_events.csv\", col_types = cols())\n\nsite_events\n\n\n\n\n\nTable 8: Site events."
  },
  {
    "objectID": "metadata.html#sites",
    "href": "metadata.html#sites",
    "title": "Metadata",
    "section": "2.10 Sites",
    "text": "2.10 Sites\nThe sites are stored in a CSV file. The file contains the following columns:\n\nsite: The site of the device.\nlocation: The location of the site.\ntype: The type of site. Can be “lake”, “river” or “other”.\ncustomer: The customer of the site.\nlon: The longitude of the site.\nlat: The latitude of the site.\nelev: The elevation of the site.\n\n\nsites &lt;- read_csv(\"rotorua_data_qc/sites.csv\", col_types = cols())\n\nsites\n\n\n\n\n\nTable 9: Sites."
  },
  {
    "objectID": "metadata.html#variables",
    "href": "metadata.html#variables",
    "title": "Metadata",
    "section": "2.11 Variables",
    "text": "2.11 Variables\nThe variables are stored in a CSV file. The file contains the following columns:\n\nvar_abbr: The variable abbreviation. This is the short name for the variable.\nfull_text: The full text of the variable. This is the long name for the variable.\nparsed: The parsed name of the variable. This is the name used for plotting.\nlabel: The label of the variable. This is the name used for the legend.\n\n\nvariables &lt;- read_csv(\"rotorua_data_qc/variables.csv\", col_types = cols())\n\nvariables\n\n\n\n\n\nTable 10: Variables."
  },
  {
    "objectID": "data-qc.html",
    "href": "data-qc.html",
    "title": "Rotorua QC",
    "section": "",
    "text": "The raw data was downloaded from the Bay of Plenty hydroTel SFTP server. The data were then collated into a CSV file which can be downloaded from GitHub or within R using the piggyback package. The data are stored in the data-raw folder.\n\ndownload &lt;- TRUE\n\nif (download) {\n  dir.create(\"data-raw\", showWarnings = FALSE)\n  # Hydrotel data\n  piggyback::pb_download(\n    file = \"rotorua_data_raw.zip\",\n    dest = \".\",\n    repo = \"limnotrack/f_rotorua\",\n    tag = \"v0.0.1\", overwrite = TRUE\n  )\n  \n  # Unzip the file to tempdir\n  tmp_dir &lt;- tempdir()\n  unzip(\"rotorua_data_raw.zip\", exdir = tmp_dir)\n  \n  # Move files into data-raw\n  file.copy(list.files(file.path(tmp_dir, \"rotorua_data_raw\"), full.names = TRUE),\n            \"data-raw\", overwrite = TRUE)\n  \n  # Delete zip file\n  unlink(\"rotorua_data_raw.zip\", force = TRUE)\n}\n\n# Read in raw data\ndat &lt;- read_csv(\"data-raw/rotorua_sftp_compiled_raw.csv\") |&gt; \n  mutate(datetime = as_datetime(Date)) |&gt; \n  select(-Date) |&gt; \n  arrange(datetime)"
  },
  {
    "objectID": "data-qc.html#standardise-to-15-minute-data-i.e.-modify-any-periods-where-data-were-logged-every-5-minutes.",
    "href": "data-qc.html#standardise-to-15-minute-data-i.e.-modify-any-periods-where-data-were-logged-every-5-minutes.",
    "title": "Rotorua QC",
    "section": "2.1 Standardise to 15-minute data (i.e. modify any periods where data were logged every 5-minutes.",
    "text": "2.1 Standardise to 15-minute data (i.e. modify any periods where data were logged every 5-minutes.\n\nCircular average for wind direction, sum for rainfall, mean for everything else.\n\n\nrain &lt;- dat |&gt; \n  select(datetime, contains(\"rainfall\")) |&gt;\n  standardise(15, FUN = sum, na.rm = TRUE)\n\nwind_dir &lt;- dat |&gt; \n  select(datetime, contains(\"wind_direction\")) |&gt;\n  standardise(15, FUN = avg_circ)\n\nmean_vars &lt;- c(\"datetime\", \n               \"do_cont_0.5m\", \"do_cont_20m\", \"do_sat_0.5m\", \n               \"do_sat_20m\", \"do_temp_0.5m\", \"do_temp_20m\", \n               # \"light_level_1\", \"light_level_2\",\n               \"ph_decommissioned\", \"ph_raw\",\n               \"temp_0.5m\", \"temp_2.5m\", \"temp_4.5m\", \n               \"temp_6.5m\", \"temp_8.5m\",  \"temp_10.5m\", \"temp_12.5m\",\n               \"temp_14.5m\", \"temp_16.5m\", \"temp_18.5m\",  \"temp_20.5m\", \n               # \"temphion_3\", \n               \"phyco\", \n               # \"trios_chl_a\",\n               \"chlorophyll\", \n               \"air_temp\", \"humidity\", \"barometric_pressure\",\n               \"wind_speed_m-s\", \"wind_speed\")\nmeans &lt;- dat |&gt;\n  select(contains(mean_vars)) |&gt;\n  standardise(15, FUN = mean, na.rm = TRUE)\n\ndate_df &lt;- data.frame(datetime = seq.POSIXt(round_date(min(dat$datetime), \"15 mins\"),\n                                            round_date(max(dat$datetime), \"15 mins\"),\n                                            by = 15*60))\n\ndat2 &lt;- list(date_df, means, rain, wind_dir) |&gt; \n  # left_join(means, by = \"datetime\") |&gt;\n  purrr::reduce(function(x, y) {left_join(x, y, by = \"datetime\")}) |&gt;\n  arrange(datetime)"
  },
  {
    "objectID": "data-qc.html#check-and-correct-any-variable-name-misalignments",
    "href": "data-qc.html#check-and-correct-any-variable-name-misalignments",
    "title": "Rotorua QC",
    "section": "2.2 Check and correct any variable name misalignments",
    "text": "2.2 Check and correct any variable name misalignments\n(e.g., temperature depths incorrectly assigned , Temperature & DO swapped (e.g., Rotorua around 2016)\n\nDO at 0.5m\n\nplotly_data(dat2, y1 = \"do_cont_20m\", y2 = \"do_temp_20m\", sub = 50)\n\nSwap DO & temperature back into their correct columns.\n\nswap_start &lt;- \"2021-03-23 19:00:00\"\nswap_end &lt;- \"2022-02-02 15:00:00\"\n\ndat2 &lt;- swap_cols(dat2, var1 = \"do_cont_20m\", var2 = \"do_temp_20m\", \n                  date_range = c(swap_start, swap_end))\n\n\nplotly_data(dat2, y1 = \"do_cont_20m\", y2 = \"do_temp_20m\",\n            date_range = c(swap_start, swap_end), buffer = 240, sub = 20)\n\n\nggplot() +\n  geom_scattermore(data = dat2, aes(x = datetime, y = chlorophyll, colour = \"chl1\")) +\n  geom_scattermore(data = dat2, aes(x = datetime, y = trios_chl_a, colour = \"chl2\")) +\n  coord_cartesian(ylim = c(0, 500)) +\n  theme_bw()\n\nSensors were all 0.5-1m, we will call them 1m.\nMap column names to standard names used in the database.\n\ncol_mapping &lt;- c(\n  # \"battery_voltage\", \n  \"f_chl_d100\" = \"chlorophyll\",\n  # \"f_chl_d110\" = \"trios_chl_a\",\n  \"f_phyc_d100\" = \"phyco\",\n  \"c_do_d100\" = \"do_cont_0.5m\",\n  \"c_do_d2000\" = \"do_cont_20m\",\n  \"c_do_sat_d100\" = \"do_sat_0.5m\",\n  \"c_do_sat_d2000\" = \"do_sat_20m\",\n  \"t_wtr_d50\" = \"temp_0.5m\",\n  \"t_wtr_d100\" = \"do_temp_0.5m\",\n  \"t_wtr_d250\" = \"temp_2.5m\",\n  \"t_wtr_d450\" = \"temp_4.5m\",\n  \"t_wtr_d650\" = \"temp_6.5m\",\n  \"t_wtr_d850\" = \"temp_8.5m\",\n  \"t_wtr_d1050\" = \"temp_10.5m\",\n  \"t_wtr_d1250\" = \"temp_12.5m\",\n  \"t_wtr_d1450\" = \"temp_14.5m\",\n  \"t_wtr_d1650\" = \"temp_16.5m\",\n  \"t_wtr_d1850\" = \"temp_18.5m\",\n  \"t_wtr_d2000\" = \"do_temp_20m\",\n  \"t_wtr_d2050\" = \"temp_20.5m\",\n  \"c_ph_d100\" = \"ph_decommissioned\",\n  \"c_ph_raw_d100\" = \"ph_raw\",\n  \n  \"t_air_h150\" = \"air_temp\",\n  \"pr_baro_h150\" = \"barometric_pressure\", \n  \"pp_rain_h150\" = \"rainfall\",\n  \"h_rh_h150\" = \"humidity\",\n  \"r_swd_h150\" = \"solar_radiation\",\n  \"w_spd_h150\" = \"wind_speed_m-s\",\n  \"w_dir_h150\" = \"wind_direction\")\n\n\ndat3 &lt;- standardise_columns(dat2, col_mapping)\n\nWrite level one raw data to file.\n\nwrite_csv(dat3, \"data-raw/rotorua_sftp_compiled_raw_level1.csv\")"
  },
  {
    "objectID": "data-qc.html#remove-based-on-site-events",
    "href": "data-qc.html#remove-based-on-site-events",
    "title": "Rotorua QC",
    "section": "3.1 Remove based on site events",
    "text": "3.1 Remove based on site events\n\nraw_long_device &lt;- raw_long_device |&gt; \n  remove_site_events(site_events = site_events, sensor_map = sensor_map) \n\n# A tibble: 39 × 5\n   site      device_id               var_ref        qc_flag        \n   &lt;chr&gt;     &lt;chr&gt;                   &lt;chr&gt;          &lt;chr&gt;          \n 1 f_Rotorua all                     all            buoy_out       \n 2 f_Rotorua all                     all            buoy_out       \n 3 f_Rotorua all                     all            buoy_out       \n 4 f_Rotorua all                     all            buoy_out       \n 5 f_Rotorua all                     all            buoy_out       \n 6 f_Rotorua all                     all            buoy_out       \n 7 f_Rotorua all                     all            buoy_out       \n 8 f_Rotorua all                     all            buoy_out       \n 9 f_Rotorua all                     all            buoy_out       \n10 f_Rotorua all                     all            buoy_out       \n11 f_Rotorua all                     all            buoy_out       \n12 f_Rotorua all                     all            buoy_out       \n13 f_Rotorua all                     all            battery_failure\n14 f_Rotorua all                     all            battery_failure\n15 f_Rotorua all                     all            battery_failure\n16 f_Rotorua all                     all            battery_failure\n17 f_Rotorua all                     all            battery_failure\n18 f_Rotorua sns_Sp_chlor_2779       f_chl          sensor_fault   \n19 f_Rotorua sns_Sp_chlor_2779       f_chl          sensor_fault   \n20 f_Rotorua sns_Sp_chlor_2779       f_chl          sensor_fault   \n21 f_Rotorua sns_Sp_chlor_9999-rua   f_chl          sensor_fault   \n22 f_Rotorua sns_Sp_chlor_2779       f_chl          sensor_fault   \n23 f_Rotorua sns_Sp_chlor_2779       f_chl          sensor_fault   \n24 f_Rotorua sns_Sp_chlor_2779       f_chl          sensor_fault   \n25 f_Rotorua sns_Sp_chlor_2779       f_chl          sensor_fault   \n26 f_Rotorua sns_TD_c7c_2103928      f_chl          sensor_fault   \n27 f_Rotorua sns_TD_c7c_2103928      f_chl          sensor_fault   \n28 f_Rotorua sns_Vs_wxt510_9999-rua2 w_spd          sensor_fault   \n29 f_Rotorua sns_Vs_wxt510_9999-rua2 w_dir          sensor_fault   \n30 f_Rotorua sns_ZT_dopto_2338       c_do_d2000     sensor_fault   \n31 f_Rotorua sns_ZT_dopto_2338       c_do_d2000     sensor_fault   \n32 f_Rotorua sns_ZT_dopto_2338       c_do_sat_d2000 sensor_fault   \n33 f_Rotorua sns_ZT_dopto_2338       c_do_sat_d2000 sensor_fault   \n34 f_Rotorua sns_Tr_microp_1035      f_phyc         sensor_fault   \n35 f_Rotorua sns_Tr_microp_1035      f_phyc         sensor_fault   \n36 f_Rotorua sns_TD_c7p_2103927      f_phyc         sensor_fault   \n37 f_Rotorua sns_ZT_dopto_2378       c_do_d100      sensor_fault   \n38 f_Rotorua sns_ZT_dopto_2378       c_do_sat_d100  sensor_fault   \n39 f_Rotorua sns_St_tstringds_017    t_wtr_d1850    sensor_fault   \n# ℹ 1 more variable: date_interval &lt;Interval&gt;\n\nraw_long_device |&gt; \n  filter(qc_flag == \"sensor_fault\") \n\n# A tibble: 94,640 × 9\n   site     datetime            device_id var_abbr var_ref_id raw_value qc_value\n   &lt;chr&gt;    &lt;dttm&gt;              &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;\n 1 f_Rotor… 2013-07-18 17:00:00 sns_ZT_d… c_do     c_do_d100       11.4       NA\n 2 f_Rotor… 2013-07-18 17:15:00 sns_ZT_d… c_do     c_do_d100       11.4       NA\n 3 f_Rotor… 2013-07-18 17:30:00 sns_ZT_d… c_do     c_do_d100       11.4       NA\n 4 f_Rotor… 2013-07-18 17:45:00 sns_ZT_d… c_do     c_do_d100       11.4       NA\n 5 f_Rotor… 2013-07-18 18:00:00 sns_ZT_d… c_do     c_do_d100       11.4       NA\n 6 f_Rotor… 2013-07-18 18:15:00 sns_ZT_d… c_do     c_do_d100       11.4       NA\n 7 f_Rotor… 2013-07-18 18:30:00 sns_ZT_d… c_do     c_do_d100       11.3       NA\n 8 f_Rotor… 2013-07-18 18:45:00 sns_ZT_d… c_do     c_do_d100       11.3       NA\n 9 f_Rotor… 2013-07-18 19:00:00 sns_ZT_d… c_do     c_do_d100       11.3       NA\n10 f_Rotor… 2013-07-18 19:15:00 sns_ZT_d… c_do     c_do_d100       11.2       NA\n# ℹ 94,630 more rows\n# ℹ 2 more variables: qc_flag &lt;chr&gt;, qc_code &lt;chr&gt;\n\n# plot_qc_data(data = raw_long_device_filt)"
  },
  {
    "objectID": "data-qc.html#relative-humidity-drift",
    "href": "data-qc.html#relative-humidity-drift",
    "title": "Rotorua QC",
    "section": "4.1 Relative humidity drift",
    "text": "4.1 Relative humidity drift\nOver the entire period, the relative humidity sensor appears to have drifted in the middle of the time period.\n\nraw_long_device |&gt; \n  filter(var_ref_id == \"h_rh_h150\") |&gt; \n  summary()\n\n     site              datetime                    device_id        \n Length:499268      Min.   :2007-07-13 14:45:00   Length:499268     \n Class :character   1st Qu.:2011-05-15 15:26:15   Class :character  \n Mode  :character   Median :2014-12-05 19:37:30   Mode  :character  \n                    Mean   :2014-11-17 02:43:05                     \n                    3rd Qu.:2018-06-27 23:48:45                     \n                    Max.   :2022-01-18 04:00:00                     \n                                                                    \n   var_abbr          var_ref_id          raw_value        qc_value    \n Length:499268      Length:499268      Min.   :  0.0   Min.   :  0.0  \n Class :character   Class :character   1st Qu.: 63.0   1st Qu.: 63.0  \n Mode  :character   Mode  :character   Median : 75.0   Median : 75.0  \n                                       Mean   : 65.7   Mean   : 65.7  \n                                       3rd Qu.: 83.0   3rd Qu.: 83.0  \n                                       Max.   :100.0   Max.   :100.0  \n                                       NA's   :36489   NA's   :38250  \n   qc_flag            qc_code         \n Length:499268      Length:499268     \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n\n\n\nplot_sensor(data = raw_long_device, var_ref_id = \"h_rh_h150\",\n            variable_ref =  variable_ref, \n            sensor_calibrations = sensor_calibrations,\n            sensor_reference = sensor_reference,\n            sensor_scaling = sensor_scaling) +\n  geom_hline(yintercept = 100, linetype = \"dashed\", colour = \"red\") +\n  coord_cartesian(ylim = c(0, 100)) \n\n\n\n\n\n\n\nFigure 3: Relative humidity drift."
  },
  {
    "objectID": "data-qc.html#basic-qc---filters",
    "href": "data-qc.html#basic-qc---filters",
    "title": "Rotorua QC",
    "section": "6.1 Basic QC - filters",
    "text": "6.1 Basic QC - filters\n\nFilter extreme outliers (order of magnitude plus)\nFilter repetitions/stuck values (careful genuine repeats e.g., rainfall == 0)\nRemove data for any periods where buoy was clearly out of the water (see notes or visual check of data)\n\n\nraw_long_device_filt &lt;- apply_filters(raw_long_device2, filters = qc_filters)\n\n\n\n\n\n\n\n\n\nplot_flag_ts(raw_long_device_filt)\n\n\n\n\n\n\n\nFigure 5: Plot raw data with basic QC filters applied."
  },
  {
    "objectID": "data-qc.html#load-in-field-measurements",
    "href": "data-qc.html#load-in-field-measurements",
    "title": "Rotorua QC",
    "section": "7.1 Load in field measurements",
    "text": "7.1 Load in field measurements\nCompare field measurements to sensor data.\n\nfield &lt;- read_csv(\"data-raw/rotorua_field_data.csv\") |&gt; \n  mutate(Date2 = as.Date(Date))\n\nchla &lt;- field |&gt; \n  filter(grepl(\"Chla\", Parameter)) |&gt; \n  select(Date2, LocationName, DepthFrom, Sample_Depth, Value) |&gt; \n  rename(Date = Date2)\n\nref_times &lt;- raw_long_device_filt |&gt; \n  mutate(hour = hour(datetime)) |&gt; \n  filter(var_abbr %in% c(\"f_chl\")) |&gt;\n  filter(hour %in% c(0:6, 21:23)) |&gt; \n  filter(as.Date(datetime) %in% as.Date(chla$Date))\n\nsub_sensor &lt;- raw_v |&gt; \n  mutate(Date = as.Date(datetime)) |&gt;\n  filter(datetime %in% ref_times$datetime) |&gt; \n  group_by(Date, device_id) |&gt;\n  summarise(qc_value = mean(qc_value, na.rm = TRUE),\n            median = median(qc_value, na.rm = TRUE), .groups = \"drop\")\n\n\n\ndf &lt;- sub_sensor |&gt; \n  left_join(chla, by = c(\"Date\" = \"Date\")) |&gt; \n  mutate(year = year(Date)) |&gt; \n  filter(!is.na(qc_value))\n\nggplot() +\n  geom_point(data = df, aes(qc_value, Value, colour = LocationName)) +\n  geom_smooth(data = df, aes(qc_value, Value, colour = LocationName), method = \"lm\") +\n  # facet_wrap(year~device_id, scales = \"free\") +\n  labs(x = \"Sensor value (Volts)\",\n       y = \"Field value (ug/L)\") +\n  coord_cartesian(ylim = c(0, 50)) +\n  theme_bw() +\n  theme(legend.position = \"bottom\") \n\nggplot() +\n  geom_point(data = df, aes(qc_value, Value, colour = device_id)) +\n  geom_smooth(data = df, aes(qc_value, Value, colour = device_id), method = \"lm\") +\n  facet_wrap(~device_id, scales = \"free\") +\n  labs(x = \"Sensor value (Volts)\",\n       y = \"Field value (ug/L)\") +\n  # coord_cartesian(ylim = c(0, 50)) +\n  theme_bw() +\n  theme(legend.position = \"bottom\") \n\n\n\n\n\n\n\nFigure 8: Compare field measurements to sensor data.\n\n\n\n\n\n\n\n\n\n\n\nFigure 9: Compare field measurements to sensor data."
  },
  {
    "objectID": "data-qc.html#phycocyanin-data",
    "href": "data-qc.html#phycocyanin-data",
    "title": "Rotorua QC",
    "section": "7.2 Phycocyanin data",
    "text": "7.2 Phycocyanin data\nRepeat similar procedure to phycocyanin data.\n\nphyc_corr &lt;- fluor_df |&gt; \n  filter(var_ref_id == \"f_phyc_d100\",\n         duplicated(datetime))\n\n# viz_data(data = phyc_corr, qc_update_df = qc_update_df, \n#          site_events = site_events, variable = \"var_ref_id\",\n#          value = \"qc_value\")\n\nsensor_scales &lt;- sensor_scaling |&gt; \n  filter(device_id %in% phyc_corr$device_id) |&gt; \n  arrange(date) |&gt; \n  select(device_id, date, offset, multiplier, range) \n\nphyc_corr &lt;- phyc_corr |&gt;\n  left_join(sensor_scales, by = c(\"device_id\", \"datetime\" = \"date\")) |&gt; \n  tidyr::fill(offset, multiplier, .direction = \"down\") |&gt;\n  mutate(qc_value = (qc_value - offset) / multiplier,\n         var_ref_id = \"f_phyc_raw_v_d100\",\n         var_abbr = \"f_phyc_raw_v\"\n  ) |&gt; \n  drift_correction(var_ref_id = \"f_phyc_raw_v_d100\", \n                   date_range = c(\"2013-02-21 12:04:53\", \"2013-06-26 23:55:06\"), \n                   low = c(0, 0, 0), high = c(0.2, 0.2, 0.39)) \n\n\nphyc_corr &lt;- phyc_corr |&gt; \n  mutate(qc_value = qc_value, # * 10,\n         var_ref_id = \"f_phyc_d100\",\n         var_abbr = \"f_phyc\"\n  )\n\nphyc_corr |&gt; \n  plot_sensor(var_ref_id = \"f_phyc_d100\", variable_ref =  variable_ref, \n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling,\n              clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 10: Phycocyanin data quality control."
  },
  {
    "objectID": "data-qc.html#water-temperature",
    "href": "data-qc.html#water-temperature",
    "title": "Rotorua QC",
    "section": "9.1 Water temperature",
    "text": "9.1 Water temperature\n\nwtemp &lt;- raw_long_device_filt |&gt; \n  filter(var_abbr %in% c(\"t_wtr\")) |&gt;\n  update_qc_code_vectorized(qc_update_df = qc_update_df)\n\n\nplot_raw_qc(data = wtemp, variable_ref = variable_ref, ylim = c(7, 30))\n\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df)\n\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d50\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 13: Temperature sensor data at 1m quality control.\n\n\n\n\n\n\nWater temperature high in the bottom waters\n\nhigh_temp &lt;- wtemp |&gt; \n  filter(var_ref_id %in% c(\"t_wtr_d2050\"), raw_value &gt;= 22,raw_value &lt;= 35) |&gt; \n  mutate(over_22 = raw_value &gt; 22,\n         tdiff = datetime - lag(datetime, default = first(datetime)),\n         group = data.table::rleid(tdiff)\n  ) |&gt; \n  group_by(var_ref_id, group) |&gt;\n  mutate(n = n(), tstep = 1:n() * 15, date = datetime[1]) |&gt; \n  filter(n &gt; 1, max(tstep) &gt;= 60) |&gt; \n  ungroup() |&gt; \n  filter(group %in% sample(unique(group), size = 20))\nhigh_temp\n\n# A tibble: 1,669 × 15\n   datetime            var_ref_id  site    device_id var_abbr raw_value qc_value\n   &lt;dttm&gt;              &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1 2007-12-21 12:45:00 t_wtr_d2050 f_Roto… sns_Ap_t… t_wtr         22.2     NA  \n 2 2007-12-21 13:00:00 t_wtr_d2050 f_Roto… sns_Ap_t… t_wtr         22.4     NA  \n 3 2007-12-21 13:15:00 t_wtr_d2050 f_Roto… sns_Ap_t… t_wtr         22.5     NA  \n 4 2007-12-21 13:30:00 t_wtr_d2050 f_Roto… sns_Ap_t… t_wtr         22.6     NA  \n 5 2008-01-19 16:15:00 t_wtr_d2050 f_Roto… sns_Ap_t… t_wtr         22.2     22.2\n 6 2008-01-19 16:30:00 t_wtr_d2050 f_Roto… sns_Ap_t… t_wtr         22.2     22.2\n 7 2008-01-19 16:45:00 t_wtr_d2050 f_Roto… sns_Ap_t… t_wtr         22.2     22.2\n 8 2008-01-19 17:00:00 t_wtr_d2050 f_Roto… sns_Ap_t… t_wtr         22.2     22.2\n 9 2008-01-19 17:15:00 t_wtr_d2050 f_Roto… sns_Ap_t… t_wtr         22.2     22.2\n10 2008-01-19 17:30:00 t_wtr_d2050 f_Roto… sns_Ap_t… t_wtr         22.2     22.2\n# ℹ 1,659 more rows\n# ℹ 8 more variables: qc_flag &lt;chr&gt;, qc_code &lt;chr&gt;, over_22 &lt;lgl&gt;,\n#   tdiff &lt;drtn&gt;, group &lt;int&gt;, n &lt;int&gt;, tstep &lt;dbl&gt;, date &lt;dttm&gt;\n\nnxt_temp &lt;- wtemp |&gt; \n  filter(var_ref_id %in% c(\"t_wtr_d2000\"), datetime %in% high_temp$datetime) |&gt; \n  left_join(high_temp |&gt; \n              select(datetime, group, date), by = c(\"datetime\")) \n\nggplot() +\n  geom_point(data = high_temp, aes(datetime, raw_value, colour = var_ref_id), size = 0.2) +\n  geom_line(data = high_temp, aes(datetime, raw_value, colour = var_ref_id, group = var_ref_id)) +\n  geom_line(data = nxt_temp, aes(datetime, raw_value, colour = var_ref_id), size = 0.2) +\n  facet_wrap(~date, scales = \"free\") +\n  # coord_cartesian(xlim = c(0, 60 * 24), ylim = c(22, 30)) +\n  # labs(x = \"Minutes\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\nWater temperature at 1m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d100\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d100\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 14: Temperature sensor data at 1m quality control.\n\n\n\n\n\n\n\nWater temperature at 2.5m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d250\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d250\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 15: Temperature sensor data at 2.5m quality control.\n\n\n\n\n\n\n\nWater temperature at 4.5m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d450\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d450\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 16: Temperature sensor data at 4.5m quality control.\n\n\n\n\n\n\n\nWater temperature at 6.5m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d650\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d650\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 17: Temperature sensor data at 6.5m quality control.\n\n\n\n\n\n\n\nWater temperature at 8.5m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d850\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d850\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 18: Temperature sensor data at 8.5m quality control.\n\n\n\n\n\n\n\nWater temperature at 10.5m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d1050\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d1050\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 19: Temperature sensor data at 10.5m quality control.\n\n\n\n\n\n\n\nWater temperature at 12.5m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d1250\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d1250\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 20: Temperature sensor data at 12.5m quality control.\n\n\n\n\n\n\n\nWater temperature at 14.5m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d1450\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d1450\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE,\n              colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 21: Temperature sensor data at 14.5m quality control.\n\n\n\n\n\n\n\nWater temperature at 16.5m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d1650\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d1650\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 22: Temperature sensor data at 16.5m quality control.\n\n\n\n\n\n\n\nWater temperature at 18.5m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d1850\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d1850\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 23: Temperature sensor data at 18.5m quality control.\n\n\n\n\n\n\n\nWater temperature at 20.0m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d2000\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d2000\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 24: Temperature sensor data at 20.0m quality control.\n\n\n\n\n\n\n\nWater temperature at 20.5m\n\n# wtemp &lt;- wtemp |&gt;\n#   update_qc_code_vectorized(qc_update_df = qc_update_df, \n#                             var_ref_id = \"t_wtr_d2050\")\n\nwtemp |&gt; \n  plot_sensor(var_ref_id = c(\"t_wtr_d2050\"), variable_ref = variable_ref,\n              sensor_calibrations = sensor_calibrations, \n              sensor_reference = sensor_reference,\n              sensor_scaling = sensor_scaling, clip_ylim = FALSE, colour = \"qc_code\")\n\n\n\n\n\n\n\nFigure 25: Temperature sensor data at 20.5m quality control."
  },
  {
    "objectID": "data-qc.html#check-for-offsets-between-temperature-nodes",
    "href": "data-qc.html#check-for-offsets-between-temperature-nodes",
    "title": "Rotorua QC",
    "section": "9.2 Check for offsets between temperature nodes",
    "text": "9.2 Check for offsets between temperature nodes\nGenerally the temperature data falls within the expected range, but there are some offsets between the sensors. The following plot shows the estimated temperatures for 10 and 25 degrees C, using calculated offsets based on when the temperature difference between the sensors are in 5% of the distribution.\nThe temperature from the DO sensors (1m and 10m) have a lower accuracy (0.5 C).\n\ntemp_strings &lt;- wtemp |&gt;\n  # Filter out oxygen depths\n  filter(!var_ref_id %in% c(\"t_wtr_d50\", \"t_wtr_d100\", \"t_wtr_d2000\")) |&gt; \n  pull(device_id) |&gt; \n  unique()\n\n\ntemp_devices &lt;- site_devices |&gt; \n  filter(device_id %in% temp_strings)\n\n\n\n\n\n\n\n\n\nFigure 26: Check for offsets between temperature nodes\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 27: Check for offsets between temperature nodes"
  },
  {
    "objectID": "data-qc.html#temperature",
    "href": "data-qc.html#temperature",
    "title": "Rotorua QC",
    "section": "11.1 Temperature",
    "text": "11.1 Temperature\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"t_wtr_d50\", \"t_wtr_d100\",\n                                           \"t_wtr_d250\", \"t_wtr_d450\",\n                                           \"t_wtr_d650\", \"t_wtr_d850\",\n                                           \"t_wtr_d1050\", \"t_wtr_d1250\",\n                                           \"t_wtr_d1450\", \"t_wtr_d1650\", \n                                           \"t_wtr_d1850\", \"t_wtr_d2000\",\n                                           \"t_wtr_d2050\"))\n\n\n\n\n\n\n\nFigure 29: Temperature data at various depths quality control."
  },
  {
    "objectID": "data-qc.html#oxygen",
    "href": "data-qc.html#oxygen",
    "title": "Rotorua QC",
    "section": "11.2 Oxygen",
    "text": "11.2 Oxygen\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"c_do_sat_d100\", \"c_do_sat_d2000\"))\n\n\n\n\n\n\n\nFigure 30: Oxygen saturation data at 1 and 10m depths quality control.\n\n\n\n\n\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"c_do_d100\", \"c_do_d2000\"))\n\n\n\n\n\n\n\nFigure 31: Oxygen data at 1 and 10m depths quality control."
  },
  {
    "objectID": "data-qc.html#chlorophyll",
    "href": "data-qc.html#chlorophyll",
    "title": "Rotorua QC",
    "section": "11.3 Chlorophyll",
    "text": "11.3 Chlorophyll\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"f_chl_d100\"))\n\n\n\n\n\n\n\nFigure 32: Chlorophyll data at 1.0m quality control."
  },
  {
    "objectID": "data-qc.html#phycocyanin",
    "href": "data-qc.html#phycocyanin",
    "title": "Rotorua QC",
    "section": "11.4 Phycocyanin",
    "text": "11.4 Phycocyanin\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"f_phyc_d100\"))\n\n\n\n\n\n\n\nFigure 33: Phycocyanin data at 1.0m quality control."
  },
  {
    "objectID": "data-qc.html#ph",
    "href": "data-qc.html#ph",
    "title": "Rotorua QC",
    "section": "11.5 pH",
    "text": "11.5 pH\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"c_ph_d100\"))\n\n\n\n\n\n\n\nFigure 34: pH data at 1.0m quality control."
  },
  {
    "objectID": "data-qc.html#meteorological-variables",
    "href": "data-qc.html#meteorological-variables",
    "title": "Rotorua QC",
    "section": "11.6 Meteorological variables",
    "text": "11.6 Meteorological variables\n\nRelative humidity (%) 1.5 mRainfall (mm/hr) 1.5 mBarometric pressure (hPa) 1.5 mAir temperature (°C) 1.5 mWind direction (°) 1.5 mWind speed (kts) 1.5 m"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\nLake Rotorua fixed buoy data\n",
    "section": "",
    "text": "Lake Rotorua fixed buoy data\n\n\nDescription: This dataset contains high-frequency environmental measurements collected by a fixed sensor buoy deployed in Lake Rotorua. The buoy was equipped with a temperature string spanning the water column, along with surface sensors for pH, chlorophyll-a, phycocyanin, and dissolved oxygen. Additional dissolved oxygen measurements were recorded at the lake bottom. A meteorological station mounted on the buoy recorded atmospheric conditions including wind speed, air temperature, and relative humidity. These observations support the characterization of physical, chemical, and biological dynamics in Lake Rotorua over time.\n\n\nBibliographic\n\n\n\n\nPublished\n\n\n\n\n\n\nKeywords\n\n\n\n\nlake monitoring\n\n\nhigh-frequency data\n\n\nsensor buoy\n\n\nwater quality\n\n\nmeteorological measurements\n\n\n\n\n\n\nFunder\n\n\nBay of Plenty Regional Council\n\n\n\n\nLicense\n\n\nCC BY 4.0\n\n\n\n\nCoverage\n\n\nTemporal\n\n\n\n\nBegin\n\n\n2007-07-13 14:45:00\n\n\n\n\nEnd\n\n\n2022-02-02 15:00:00\n\n\n\n\nSpatial\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\nName\n\n\nDescription\n\n\nUnit\n\n\n\n\n\n\nsite\n\n\nSite of measurement\n\n\n\n\n\n\ndevice_id\n\n\nDevice ID\n\n\n\n\n\n\nreference\n\n\nReference point, can be either depth (d), height (h) or elevation (e)\n\n\n\n\n\n\nz_relative\n\n\nRelative distance from reference point\n\n\n\n\n\n\nvar_abbr\n\n\nVariable abbreviation\n\n\n\n\n\n\nlow\n\n\nLow value to set values to NA if they are below this value\n\n\n\n\n\n\nhigh\n\n\nHigh value to set values to NA if they are above this value\n\n\n\n\n\n\nroc\n\n\nRate of change to set values to NA which change from the previous value by greater than this value\n\n\n\n\n\n\nconsec\n\n\nSet values to NA if there are consecutive values greater than this value\n\n\n\n\n\n\ninterp\n\n\nInterpolate values if there is a data gap less than this value\n\n\n\n\n\n\ndatetime\n\n\nDate and time of measurement\n\n\n\n\n\n\nqc_value_t_wtr_d50\n\n\nWater temperature at 0.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d100\n\n\nWater temperature at 1.0m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d250\n\n\nWater temperature at 2.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d450\n\n\nWater temperature at 4.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d650\n\n\nWater temperature at 6.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d850\n\n\nWater temperature at 8.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d1050\n\n\nWater temperature at 10.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d1250\n\n\nWater temperature at 12.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d1450\n\n\nWater temperature at 14.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d1650\n\n\nWater temperature at 16.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d1850\n\n\nWater temperature at 18.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d2000\n\n\nWater temperature at 20.0m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_t_wtr_d2050\n\n\nWater temperature at 20.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_c_do_d100\n\n\nDissolved oxygen concentration at 1.0m\n\n\nmg/l\n\n\n\n\nqc_value_c_do_d2000\n\n\nDissolved oxygen concentration at 10.0m\n\n\nmg/l\n\n\n\n\nqc_value_c_do_sat_d100\n\n\nDissolved oxygen percent saturation at 1.0m\n\n\npercent\n\n\n\n\nqc_value_c_do_sat_d2000\n\n\nDissolved oxygen percent saturation at 20.0m\n\n\npercent\n\n\n\n\nqc_value_h_rh_h150\n\n\nRelative humidity at 1.5m\n\n\npercent\n\n\n\n\nqc_value_pp_rain_h150\n\n\nRainfall at 1.5m\n\n\nmm\n\n\n\n\nqc_value_pr_baro_h150\n\n\nBarometric pressure at 1.5m\n\n\nhPa\n\n\n\n\nqc_value_t_air_h150\n\n\nAir temperature at 1.5m\n\n\ndegree_Celsius\n\n\n\n\nqc_value_w_dir_h150\n\n\nWind direction at 1.5m\n\n\ndegree\n\n\n\n\nqc_value_w_spd_h150\n\n\nWind speed at 1.5m\n\n\nm/s\n\n\n\n\nqc_value_c_ph_d100\n\n\npH at 1.0m\n\n\n-\n\n\n\n\nqc_value_f_chl_d100\n\n\nChlorophyll fluorescence at 1.0m\n\n\nRFU\n\n\n\n\nqc_value_f_phyc_d100\n\n\nPhyocyanin fluorescence at 1.0m\n\n\nRFU\n\n\n\n\nqc_code_t_wtr_d100\n\n\nQuality control code for water temperature at 0.5m\n\n\n\n\n\n\nqc_code_t_wtr_d1050\n\n\nQuality control code for water temperature at 1.0m\n\n\n\n\n\n\nqc_code_t_wtr_d1250\n\n\nQuality control code for water temperature at 2.5m\n\n\n\n\n\n\nqc_code_t_wtr_d1450\n\n\nQuality control code for water temperature at 4.5m\n\n\n\n\n\n\nqc_code_t_wtr_d1650\n\n\nQuality control code for water temperature at 6.5m\n\n\n\n\n\n\nqc_code_t_wtr_d1850\n\n\nQuality control code for water temperature at 8.5m\n\n\n\n\n\n\nqc_code_t_wtr_d2000\n\n\nQuality control code for water temperature at 10.5m\n\n\n\n\n\n\nqc_code_t_wtr_d2050\n\n\nQuality control code for water temperature at 12.5m\n\n\n\n\n\n\nqc_code_t_wtr_d250\n\n\nQuality control code for water temperature at 14.5m\n\n\n\n\n\n\nqc_code_t_wtr_d450\n\n\nQuality control code for water temperature at 16.5m\n\n\n\n\n\n\nqc_code_t_wtr_d50\n\n\nQuality control code for water temperature at 18.5m\n\n\n\n\n\n\nqc_code_t_wtr_d650\n\n\nQuality control code for water temperature at 20.0m\n\n\n\n\n\n\nqc_code_t_wtr_d850\n\n\nQuality control code for water temperature at 20.5m\n\n\n\n\n\n\nqc_code_c_do_d100\n\n\nQuality control code for dissolved oxygen concentration at 1.0m\n\n\n\n\n\n\nqc_code_c_do_d2000\n\n\nQuality control code for dissolved oxygen concentration at 10.0m\n\n\n\n\n\n\nqc_code_c_do_sat_d100\n\n\nQuality control code for dissolved oxygen percent saturation at 1.0m\n\n\n\n\n\n\nqc_code_c_do_sat_d2000\n\n\nQuality control code for dissolved oxygen percent saturation at 20.0m\n\n\n\n\n\n\nqc_code_h_rh_h150\n\n\nQuality control code for relative humidity at 1.5m\n\n\n\n\n\n\nqc_code_pp_rain_h150\n\n\nQuality control code for rainfall at 1.5m\n\n\n\n\n\n\nqc_code_pr_baro_h150\n\n\nQuality control code for barometric pressure at 1.5m\n\n\n\n\n\n\nqc_code_t_air_h150\n\n\nQuality control code for air temperature at 1.5m\n\n\n\n\n\n\nqc_code_w_dir_h150\n\n\nQuality control code for wind direction at 1.5m\n\n\n\n\n\n\nqc_code_w_spd_h150\n\n\nQuality control code for wind speed at 1.5m\n\n\n\n\n\n\nqc_code_c_ph_d100\n\n\nQuality control code for ph at 1.0m\n\n\n\n\n\n\nqc_code_f_chl_d100\n\n\nQuality control code for chlorophyll fluorescence at 1.0m\n\n\n\n\n\n\nqc_code_f_phyc_d100\n\n\nQuality control code for phyocyanin fluorescence at 1.0m\n\n\n\n\n\n\nqc_flag_t_wtr_d100\n\n\nQuality control flag for water temperature at 0.5m\n\n\n\n\n\n\nqc_flag_t_wtr_d1050\n\n\nQuality control flag for water temperature at 1.0m\n\n\n\n\n\n\nqc_flag_t_wtr_d1250\n\n\nQuality control flag for water temperature at 2.5m\n\n\n\n\n\n\nqc_flag_t_wtr_d1450\n\n\nQuality control flag for water temperature at 4.5m\n\n\n\n\n\n\nqc_flag_t_wtr_d1650\n\n\nQuality control flag for water temperature at 6.5m\n\n\n\n\n\n\nqc_flag_t_wtr_d1850\n\n\nQuality control flag for water temperature at 8.5m\n\n\n\n\n\n\nqc_flag_t_wtr_d2000\n\n\nQuality control flag for water temperature at 10.5m\n\n\n\n\n\n\nqc_flag_t_wtr_d2050\n\n\nQuality control flag for water temperature at 12.5m\n\n\n\n\n\n\nqc_flag_t_wtr_d250\n\n\nQuality control flag for water temperature at 14.5m\n\n\n\n\n\n\nqc_flag_t_wtr_d450\n\n\nQuality control flag for water temperature at 16.5m\n\n\n\n\n\n\nqc_flag_t_wtr_d50\n\n\nQuality control flag for water temperature at 18.5m\n\n\n\n\n\n\nqc_flag_t_wtr_d650\n\n\nQuality control flag for water temperature at 20.0m\n\n\n\n\n\n\nqc_flag_t_wtr_d850\n\n\nQuality control flag for water temperature at 20.5m\n\n\n\n\n\n\nqc_flag_c_do_d100\n\n\nQuality control flag for dissolved oxygen concentration at 1.0m\n\n\n\n\n\n\nqc_flag_c_do_d2000\n\n\nQuality control flag for dissolved oxygen concentration at 10.0m\n\n\n\n\n\n\nqc_flag_c_do_sat_d100\n\n\nQuality control flag for dissolved oxygen percent saturation at 1.0m\n\n\n\n\n\n\nqc_flag_c_do_sat_d2000\n\n\nQuality control flag for dissolved oxygen percent saturation at 20.0m\n\n\n\n\n\n\nqc_flag_h_rh_h150\n\n\nQuality control flag for relative humidity at 1.5m\n\n\n\n\n\n\nqc_flag_pp_rain_h150\n\n\nQuality control flag for rainfall at 1.5m\n\n\n\n\n\n\nqc_flag_pr_baro_h150\n\n\nQuality control flag for barometric pressure at 1.5m\n\n\n\n\n\n\nqc_flag_t_air_h150\n\n\nQuality control flag for air temperature at 1.5m\n\n\n\n\n\n\nqc_flag_w_dir_h150\n\n\nQuality control flag for wind direction at 1.5m\n\n\n\n\n\n\nqc_flag_w_spd_h150\n\n\nQuality control flag for wind speed at 1.5m\n\n\n\n\n\n\nqc_flag_c_ph_d100\n\n\nQuality control flag for ph at 1.0m\n\n\n\n\n\n\nqc_flag_f_chl_d100\n\n\nQuality control flag for chlorophyll fluorescence at 1.0m\n\n\n\n\n\n\nqc_flag_f_phyc_d100\n\n\nQuality control flag for phyocyanin fluorescence at 1.0m\n\n\n\n\n\n\ndate\n\n\nDate of calibration\n\n\n\n\n\n\nvariable\n\n\nVariable abbreviation\n\n\n\n\n\n\ntemperature\n\n\nTemperature at calibration\n\n\n\n\n\n\ntype\n\n\nType of calibration\n\n\n\n\n\n\ncomment\n\n\nComment\n\n\n\n\n\n\ndate\n\n\nDate of reference measurement\n\n\n\n\n\n\nreference_type\n\n\nType of reference (e.g. buffer, saturated water)\n\n\n\n\n\n\nvalue_actual\n\n\nValue of the reference\n\n\n\n\n\n\nunits_value\n\n\nUnits of the value\n\n\n\n\n\n\nvalue_measured\n\n\nMeasured value by the sensor\n\n\n\n\n\n\nunits_sensor\n\n\nUnits of the sensor\n\n\n\n\n\n\ntemperature\n\n\nTemperature of the reference type at measurement\n\n\n\n\n\n\ndate\n\n\nDate\n\n\n\n\n\n\noffset\n\n\nOffset applied to sensor measurement\n\n\n\n\n\n\nmultiplier\n\n\nMultiplier applied to sensor measurement\n\n\n\n\n\n\nrange\n\n\nRange of measurements\n\n\n\n\n\n\nlog_multiplier\n\n\nMultiplier applied at the logger\n\n\n\n\n\n\nsource\n\n\nSource of information\n\n\n\n\n\n\ndate_from\n\n\nDate device is deployed to site\n\n\n\n\n\n\ndate_to\n\n\nDate device is retrieved from site\n\n\n\n\n\n\nnotes_device\n\n\nNotes on the device\n\n\n\n\n\n\nnotes\n\n\nNotes\n\n\n\n\n\n\nsite_visit\n\n\nWas the site visited, logical value\n\n\n\n\n\n\nvariables\n\n\nList of variables or can be all\n\n\n\n\n\n\naction\n\n\nType of action at site such as deployed, removed, cleaned\n\n\n\n\n\n\ncomments\n\n\nComment\n\n\n\n\n\n\nlocation\n\n\nLocation of site\n\n\n\n\n\n\ntype\n\n\nType of monitoring site\n\n\n\n\n\n\ncustomer\n\n\nCustomer\n\n\n\n\n\n\nlon\n\n\nLongitude\n\n\ndegree\n\n\n\n\nlat\n\n\nLatitude\n\n\ndegree\n\n\n\n\nelev\n\n\nElevation\n\n\nmetres\n\n\n\n\ntype\n\n\nType of variable\n\n\n\n\n\n\nabbr\n\n\nAbbreviation of variable\n\n\n\n\n\n\nfull_text\n\n\nFull text variable name\n\n\n\n\n\n\nparsed\n\n\nVariable name to be parsed\n\n\n\n\n\n\nlabel\n\n\nLabel for variable\n\n\n\n\n\n\n\n\nDistribution\n\n\n\n\n\nFile\n\n\nFormat\n\n\n \n\n\n\n\n\n\ndevice_position\n\n\ncsv\n\n\nDownload\n\n\n\n\ndevice_variable\n\n\ncsv\n\n\nDownload\n\n\n\n\nqc_filters\n\n\ncsv\n\n\nDownload\n\n\n\n\nrotorua_qc\n\n\ncsv\n\n\nDownload\n\n\n\n\nsensor_calibrations\n\n\ncsv\n\n\nDownload\n\n\n\n\nsensor_reference\n\n\ncsv\n\n\nDownload\n\n\n\n\nsensor_scaling\n\n\ncsv\n\n\nDownload\n\n\n\n\nsite_devices\n\n\ncsv\n\n\nDownload\n\n\n\n\nsite_events\n\n\ncsv\n\n\nDownload\n\n\n\n\nvariables\n\n\ncsv\n\n\nDownload"
  },
  {
    "objectID": "rotorua-qc-summary.html",
    "href": "rotorua-qc-summary.html",
    "title": "Rotorua QC Summary",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(readr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(scattermore)\nlibrary(DT)\nlibrary(patchwork)\n\n# Set timezone to NZST\nwithr::local_locale(c(\"LC_TIME\" = \"C\"))\nwithr::local_timezone(\"Etc/GMT-12\")\n\n# Load functions\nsource(\"R/qc_funs.R\")"
  },
  {
    "objectID": "rotorua-qc-summary.html#load-libraries",
    "href": "rotorua-qc-summary.html#load-libraries",
    "title": "Rotorua QC Summary",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(readr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(scattermore)\nlibrary(DT)\nlibrary(patchwork)\n\n# Set timezone to NZST\nwithr::local_locale(c(\"LC_TIME\" = \"C\"))\nwithr::local_timezone(\"Etc/GMT-12\")\n\n# Load functions\nsource(\"R/qc_funs.R\")"
  },
  {
    "objectID": "rotorua-qc-summary.html#temperature",
    "href": "rotorua-qc-summary.html#temperature",
    "title": "Rotorua QC Summary",
    "section": "5.1 Temperature",
    "text": "5.1 Temperature\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"t_wtr_d50\", \"t_wtr_d100\",\n                                           \"t_wtr_d250\", \"t_wtr_d450\",\n                                           \"t_wtr_d650\", \"t_wtr_d850\",\n                                           \"t_wtr_d1050\", \"t_wtr_d1250\",\n                                           \"t_wtr_d1450\", \"t_wtr_d1650\", \n                                           \"t_wtr_d1850\", \"t_wtr_d2000\",\n                                           \"t_wtr_d2050\"))\n\n\n\n\n\n\n\nFigure 1: Temperature data at various depths quality control."
  },
  {
    "objectID": "rotorua-qc-summary.html#oxygen-saturation",
    "href": "rotorua-qc-summary.html#oxygen-saturation",
    "title": "Rotorua QC Summary",
    "section": "5.2 Oxygen saturation",
    "text": "5.2 Oxygen saturation\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"c_do_sat_d100\", \"c_do_sat_d2000\"))\n\n\n\n\n\n\n\nFigure 2: Oxygen saturation data at 1 and 10m depths quality control."
  },
  {
    "objectID": "rotorua-qc-summary.html#oxygen-concentration",
    "href": "rotorua-qc-summary.html#oxygen-concentration",
    "title": "Rotorua QC Summary",
    "section": "5.3 Oxygen concentration",
    "text": "5.3 Oxygen concentration\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"c_do_d100\", \"c_do_d2000\"))\n\n\n\n\n\n\n\nFigure 3: Oxygen data at 1 and 10m depths quality control."
  },
  {
    "objectID": "rotorua-qc-summary.html#chlorophyll",
    "href": "rotorua-qc-summary.html#chlorophyll",
    "title": "Rotorua QC Summary",
    "section": "5.4 Chlorophyll",
    "text": "5.4 Chlorophyll\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"f_chl_d100\"))\n\n\n\n\n\n\n\nFigure 4: Chlorophyll data at 1.0m quality control."
  },
  {
    "objectID": "rotorua-qc-summary.html#phycocyanin",
    "href": "rotorua-qc-summary.html#phycocyanin",
    "title": "Rotorua QC Summary",
    "section": "5.5 Phycocyanin",
    "text": "5.5 Phycocyanin\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"f_phyc_d100\"))\n\n\n\n\n\n\n\nFigure 5: Phycocyanin data at 1.0m quality control."
  },
  {
    "objectID": "rotorua-qc-summary.html#ph",
    "href": "rotorua-qc-summary.html#ph",
    "title": "Rotorua QC Summary",
    "section": "5.6 pH",
    "text": "5.6 pH\n\nplot_var_ts_qc(data = data, var_ref_id = c(\"c_ph_d100\"))\n\n\n\n\n\n\n\nFigure 6: pH data at 1.0m quality control."
  }
]